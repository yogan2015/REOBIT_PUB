<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP14 Patch 3" creationDateTime="2022-10-11T10:43:14.2578546" />
  <contentHeader name="TemplatePLC210_03" version="3.5.14.30" modificationDateTime="2022-10-11T10:23:43.7157386" organization="Production association OWEN">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Company" type="string">Production association OWEN</property>
          <property name="Project" type="string">FUNCTIONS (002)</property>
          <property name="Title" type="string">TemplatePLC210_03</property>
          <property name="Version" type="version">3.5.14.30</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="CTRL8">
        <baseType>
          <struct>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="108" />
              </initialValue>
            </variable>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="BIT0">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT1">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT2">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT3">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT4">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT5">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT6">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT7">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT8">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT9">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT10">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT11">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT12">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT13">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT14">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT15">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8c434d67-51d7-4430-a21a-fae28cd4fefa</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="bCTRL8">
        <baseType>
          <struct>
            <variable name="CTRL">
              <type>
                <array>
                  <dimension lower="0" upper="3" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>68e543be-5d4f-42b0-8b11-af273f9b3a06</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="CTRL16">
        <baseType>
          <struct>
            <variable name="ID">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="116" />
              </initialValue>
            </variable>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="BIT0">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT1">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT2">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT3">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT4">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT5">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT6">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT7">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT8">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT9">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT10">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT11">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT12">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT13">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT14">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT15">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT16">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT17">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT18">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT19">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT20">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT21">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT22">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT23">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT24">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT25">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT26">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT27">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT28">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT29">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT30">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT31">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5b46cca3-42e7-4e49-b92a-f6d1b42dbcdc</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="wCTRL16">
        <baseType>
          <struct>
            <variable name="CTRL">
              <type>
                <array>
                  <dimension lower="0" upper="3" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>63db2444-9037-4ca1-a5e0-2b99b7d89459</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="CTRL32">
        <baseType>
          <struct>
            <variable name="ID">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="132" />
              </initialValue>
            </variable>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="BIT0">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT1">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT2">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT3">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT4">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT5">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT6">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT7">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT8">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT9">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT10">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT11">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT12">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT13">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT14">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT15">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT16">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT17">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT18">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT19">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT20">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT21">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT22">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT23">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT24">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT25">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT26">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT27">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT28">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT29">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT30">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT31">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT32">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT33">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT34">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT35">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT36">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT37">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT38">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT39">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT40">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT41">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT42">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT43">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT44">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT45">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT46">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT47">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT48">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT49">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT50">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT51">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT52">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT53">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT54">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT55">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT56">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT57">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT58">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT59">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT60">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT61">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT62">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="BIT63">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1bf1f3f8-eb83-4be3-9554-ce5cb12053e1</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="dwCTRL32">
        <baseType>
          <struct>
            <variable name="CTRL">
              <type>
                <array>
                  <dimension lower="0" upper="3" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>db6e5af7-cddf-437b-a0a6-0d0b50cd9f76</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="AND16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := pwADR1^ AND pwADR2^;
	END_FOR
ELSE
	AND16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e5ff58f2-114a-4b9d-8ad3-44fc9fc0e74b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="AND32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := pdwADR1^ AND pdwADR2^;
	END_FOR
ELSE
	AND32	:=	TRUE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5fe4f59f-3058-4056-ab1a-9b5ef3710b2a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="AND8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := pbADR1^ AND pbADR2^;
	END_FOR
ELSE
	AND8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dd50a625-bf8a-477b-a109-63c10c5f4304</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NAND8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := NOT(pbADR1^ AND pbADR2^);
	END_FOR
ELSE
	NAND8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c7db9299-8fc0-473e-8d3b-c711c3ee3565</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NAND16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := NOT(pwADR1^ AND pwADR2^);
	END_FOR
ELSE
	NAND16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ebf65775-2b78-4aaa-9905-14597fc16a49</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NAND32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := NOT(pdwADR1^ AND pdwADR2^);
	END_FOR
ELSE
	NAND32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9110a7a9-27b9-4287-9e1f-9ffd017becd8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="OR8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := pbADR1^ OR pbADR2^;
	END_FOR
ELSE
	OR8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a82363b0-e2ab-4983-8bda-6ada30dec882</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="OR16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := pwADR1^ OR pwADR2^;
	END_FOR
ELSE
	OR16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>33a06337-9fbf-4a0d-8334-800afecde22f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="OR32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := pdwADR1^ OR pdwADR2^;
	END_FOR
ELSE
	OR32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>82d60dcb-c066-44c5-8bc6-2a86818df7cb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOR8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := NOT(pbADR1^ OR pbADR2^);
	END_FOR
ELSE
	NOR8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e79c4e0d-13cf-44cc-ab36-1fea6b94c605</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOR16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := NOT(pwADR1^ OR pwADR2^);
	END_FOR
ELSE
	NOR16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6882190d-0faa-4726-8ac6-3a9f2aa627ca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOR32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := NOT(pdwADR1^ OR pdwADR2^);
	END_FOR
ELSE
	NOR32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>72e12d04-39d0-421c-b13a-7ceeb05fa894</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="XOR8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := pbADR1^ XOR pbADR2^;
	END_FOR
ELSE
	XOR8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ecd11682-a16f-49ce-920c-6969ccad3bb8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="XOR16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := pwADR1^ XOR pwADR2^;
	END_FOR
ELSE
	XOR16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9d10a4a2-ee74-40d0-b855-7254845e1ed6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="XOR32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := pdwADR1^ XOR pdwADR2^;
	END_FOR
ELSE
	XOR32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc087edf-8f59-4dda-823a-929933381aed</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NXOR8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	IN_ADR2+COUNT;
		pbADR3	:=	OUT_ADR3+COUNT;
		pbADR3^ := NOT(pbADR1^ XOR pbADR2^);
	END_FOR
ELSE
	NXOR8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>59b4b583-01fd-4056-a086-01abfd16291f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NXOR16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR3">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	IN_ADR2+COUNT;
		pwADR3	:=	OUT_ADR3+COUNT;
		pwADR3^ := NOT(pwADR1^ XOR pwADR2^);
	END_FOR
ELSE
	NXOR16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7276e49d-9cb9-4a71-8b85-3c431419c789</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NXOR32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR3">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = IN_ADR2^ AND IN_ADR1^ = OUT_ADR3^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	IN_ADR2+COUNT;
		pdwADR3	:=	OUT_ADR3+COUNT;
		pdwADR3^ := NOT(pdwADR1^ XOR pdwADR2^);
	END_FOR
ELSE
	NXOR32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>96dba2e6-3355-408d-9e80-f388a5ec8dfe</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOT8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pbADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF IN_ADR1^ = OUT_ADR2^ THEN
	pbADR1	:=	IN_ADR1+1;
	SIZE	:=	pbADR1^;
	FOR COUNT:=2 TO SIZE-1 DO
		pbADR1	:=	IN_ADR1+COUNT;
		pbADR2	:=	OUT_ADR2+COUNT;
		pbADR2^ := NOT pbADR1^;
	END_FOR
ELSE
	NOT8	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8b9b457c-cff6-43b3-80a4-9d186638271c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOT16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pwADR2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pwADR1^;
IF IN_ADR1^ = OUT_ADR2^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pwADR1	:=	IN_ADR1+COUNT;
		pwADR2	:=	OUT_ADR2+COUNT;
		pwADR2^ := NOT pwADR1^;
	END_FOR
ELSE
	NOT16	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>897fc01d-5ffc-42c1-857d-ae4fb9339738</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NOT32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pdwADR2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	pdwADR1	:=	IN_ADR1+STEP;
	SIZE	:=	pdwADR1^;
IF IN_ADR1^ = OUT_ADR2^ AND SIZE MOD STEP = 0 THEN
	FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
		pdwADR1	:=	IN_ADR1+COUNT;
		pdwADR2	:=	OUT_ADR2+COUNT;
		pdwADR2^ := NOT pdwADR1^;
	END_FOR
ELSE
	NOT32	:=	TRUE;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5b1fb536-2b1c-4bcb-b0cb-3d1ba188fe29</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="EQ8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EQ8 := NXOR8(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8b07a58d-14fc-46be-9c4b-7f615864699e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="EQ16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EQ16 := NXOR16(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c20d7602-9961-42e7-8494-65347c24ed7c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="EQ32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EQ32 := NXOR32(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c4c831e5-6d75-494d-9ca2-781bc2e4757a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NEQ8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">NEQ8 := XOR8(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a0383e8a-b852-474a-8c82-dae4f33d5394</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NEQ16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">NEQ16 := XOR16(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b4dae573-3c39-4fe2-a6fc-740096bfa505</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NEQ32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="IN_ADR2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="OUT_ADR3">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">NEQ32 := XOR32(IN_ADR1,IN_ADR2,OUT_ADR3);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>faf9d016-e25e-4848-84d2-d1ca431743e4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="GET_BIT8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR	:=	IN_ADR+STEP;
SIZE	:=	pbADR^;
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pbADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/8))*STEP;
GET_BIT8 := ANY_TO_BOOL(SHL(1,BIT_NUMBER MOD 8) AND pbADR^);
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>12a98c65-0fef-48c5-848f-dbf33db3786d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SET_BIT8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="bBYTE">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR:=	IN_ADR+STEP;
SIZE	:=	pbADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pbADR := IN_ADR + 2*STEP + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE);
bBYTE:=SHL(1,BIT_NUMBER MOD STEP_SIZE);
pbADR^ := pbADR^ OR bBYTE;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>79b96be1-7907-4ce8-92ed-1fdabc7a6496</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_0_8" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR1	:=	IN_ADR1+1;
SIZE	:=	pbADR1^;
FOR COUNT:=2 TO SIZE-1 DO
	pbADR1	:=	IN_ADR1+COUNT;
	IF pbADR1^ =0 THEN
		RETURN;
	ELSE
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FIND1ST_0_8 MOD 8)) OR pbADR1^ )= 255) THEN			
				RETURN; 		
			END_IF;
			FIND1ST_0_8:=FIND1ST_0_8 + 1;
		UNTIL FIND1ST_0_8 MOD 8 = 0
		END_REPEAT;	
	END_IF
END_FOR
FIND1ST_0_8:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4f435ba6-0053-4f06-9c61-26ab37efbd08</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_1_8" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR1	:=	IN_ADR1+STEP;
SIZE	:=	pbADR1^;
FOR COUNT:=2 TO SIZE-1 DO
	pbADR1	:=	IN_ADR1+COUNT;
	IF NOT(pbADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FIND1ST_1_8 MOD 8)) OR pbADR1^ )= 255 THEN
				RETURN;
			END_IF;
			FIND1ST_1_8:=FIND1ST_1_8 + 1;
		UNTIL FIND1ST_1_8 MOD 8 = 0
		END_REPEAT;
	ELSE
		FIND1ST_1_8:=FIND1ST_1_8 + 8;
	END_IF
END_FOR
FIND1ST_1_8:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2a476147-ea42-4541-ba4e-db658599c051</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="GET_BIT16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR	:=	IN_ADR+STEP;
SIZE	:=	pwADR^;
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
GET_BIT16 := ANY_TO_BOOL(SHL(1,BIT_NUMBER MOD STEP_SIZE) AND pwADR^);
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1720a264-5a3c-4328-a8ac-cba9618b7726</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="GET_BIT32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR	:=	IN_ADR+STEP;
SIZE	:=	pdwADR^;
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pdwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
GET_BIT32 := ANY_TO_BOOL(SHL(1,BIT_NUMBER MOD STEP_SIZE) AND pdwADR^);
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bdbfe3f5-a51f-4ece-84f2-e449a4dde763</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SET_BIT16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="wWORD">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR:=	IN_ADR+STEP;
SIZE	:=	pwADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
wWORD:=SHL(1,BIT_NUMBER MOD STEP_SIZE);
pwADR^ := pwADR^ OR wWORD;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b2989cc6-ef0b-448d-8bd2-7b191e3eb227</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SET_BIT32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="dwDWORD">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR:=	IN_ADR+STEP;
SIZE	:=	pdwADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pdwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
dwDWORD:=SHL(1,BIT_NUMBER MOD STEP_SIZE);
pdwADR^ := pdwADR^ OR dwDWORD;	</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7c7ce1ed-d748-469a-9646-dafdecca4288</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_1_16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
N:=FIND1ST_1_16(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>30da5cbd-4b79-414e-a6ab-ae66a564ca4e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_0_16" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pwADR1	:=	IN_ADR1+COUNT;
	IF pwADR1^ =0 THEN
		RETURN;
	ELSE
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FIND1ST_0_16 MOD STEP_SIZE)) OR pwADR1^ )= 65535) THEN		
				RETURN; 		
			END_IF;
			FIND1ST_0_16:=FIND1ST_0_16 + 1;
		UNTIL FIND1ST_0_16 MOD STEP_SIZE = 0
		END_REPEAT;	
	END_IF
END_FOR
FIND1ST_0_16:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>905d8604-fa1d-42cd-b70b-110d1fb940b1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_0_32" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pdwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pdwADR1	:=	IN_ADR1+COUNT;
	IF pdwADR1^ =0 THEN
		RETURN;
	ELSE
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FIND1ST_0_32 MOD STEP_SIZE)) OR pdwADR1^ )= 4294967295) THEN		
				RETURN; 		
			END_IF;
			FIND1ST_0_32:=FIND1ST_0_32 + 1;
		UNTIL FIND1ST_0_32 MOD STEP_SIZE = 0
		END_REPEAT;	
	END_IF
END_FOR
FIND1ST_0_32:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>25d985cc-96d9-4386-8e06-3d0f6b07871c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_1_16" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pwADR1^;
FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
	pwADR1	:=	IN_ADR1+COUNT;
	IF NOT(pwADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FIND1ST_1_16 MOD STEP_SIZE)) OR pwADR1^ )= 65535 THEN
				RETURN;
			END_IF;
			FIND1ST_1_16:=FIND1ST_1_16 + 1;
		UNTIL FIND1ST_1_16 MOD STEP_SIZE = 0
		END_REPEAT;
	ELSE
		FIND1ST_1_16:=FIND1ST_1_16 + STEP_SIZE;
	END_IF
END_FOR
FIND1ST_1_16:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>06145564-411f-4109-9591-962141413603</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FIND1ST_1_32" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pdwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pdwADR1	:=	IN_ADR1+COUNT;
	IF NOT(pdwADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FIND1ST_1_32 MOD STEP_SIZE)) OR pdwADR1^ )= 4294967295 THEN
				RETURN;
			END_IF;
			FIND1ST_1_32:=FIND1ST_1_32 + 1;
		UNTIL FIND1ST_1_32 MOD STEP_SIZE = 0
		END_REPEAT;
	ELSE
		FIND1ST_1_32:=FIND1ST_1_32 + STEP_SIZE;
	END_IF
END_FOR
FIND1ST_1_32:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3b629fe8-9f48-4f53-88da-5d89e02a1db4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_AND8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			AND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			AND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			AND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			AND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f401dffc-8e67-4046-b400-1c2b069eaa8f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_AND16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			AND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			AND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			AND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			AND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6b24c292-8acf-4bf9-b76c-3484421de496</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_AND32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			AND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			AND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			AND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			AND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e5836a4b-52f9-47ae-95a4-c437fd573ae3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_EQ8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			EQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			EQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			EQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			EQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ee566ffe-660b-4424-ae13-00ed24d9708b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_EQ16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			EQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			EQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			EQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			EQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3690aca6-abf1-464c-8070-2ea04b98270d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_EQ32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			EQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			EQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			EQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			EQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f2755be4-ce16-4eb8-b91a-6feabe9c4672</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NAND8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			NAND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			NAND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			NAND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			NAND8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>34ce3863-d9c6-47fe-8fd5-2ace153c897e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NAND16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			NAND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			NAND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			NAND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			NAND16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ce3feee8-df6d-45eb-b056-897a3f9f72b5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NAND32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			NAND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			NAND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			NAND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			NAND32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 AND X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c5148024-6994-428a-9f6a-5e3ccf402413</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NEQ8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			NEQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			NEQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			NEQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			NEQ8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a152e7b4-66b2-4a63-a6c0-9ff086f54e07</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NEQ16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			NEQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			NEQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			NEQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			NEQ16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0e8c8027-7545-49e1-b96b-4c76fd2378a6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_1_8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
N:=FIND1ST_1_8(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9193c303-1b5c-42f2-976e-5ae6435ac367</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_1_32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
N:=FIND1ST_1_32(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9377f3a9-a220-4ef3-a0c1-e8677149fe68</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_0_8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
N:=FIND1ST_0_8(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3b92cad6-9fc0-4bf1-a448-285885be0e9f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_0_16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
N:=FIND1ST_0_16(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8610c05b-d7c5-4f09-8500-9bf5ca0e4e2b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FIND1ST_0_32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
N:=FIND1ST_0_32(ADR(CTRL1));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2bb7ea8e-7541-4a8f-9e35-0f65f10a29ca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_SET_BIT16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
SET_BIT16(ADR(CTRL1),N,);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f6b23ee9-f1ae-4b46-a291-07d9b1ccd421</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_SET_BIT8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
SET_BIT8(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>351e6d1b-942a-4cc5-9371-3b84182130db</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_SET_BIT32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
SET_BIT32(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0cee82d8-eede-432a-9320-549260b4e60f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_RESET_BIT16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
RESET_BIT16(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e687443f-a2d8-423c-be47-78a2a3ffd1fc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_RESET_BIT32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
RESET_BIT32(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e439e345-e737-4b9d-ab07-8e8a0b5524f7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_RESET_BIT8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
RESET_BIT8(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f951a0bf-9104-479d-85f7-cdc35f13c7b5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="RESET_BIT16" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="wWORD">
              <type>
                <WORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR:=	IN_ADR+STEP;
SIZE	:=	pwADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
wWORD:=NOT(SHL(1,BIT_NUMBER MOD STEP_SIZE));
pwADR^ := pwADR^ AND wWORD;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>190863ec-5eaa-4124-8061-b4696887648b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="RESET_BIT32" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="dwDWORD">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR:=	IN_ADR+STEP;
SIZE	:=	pdwADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pdwADR := IN_ADR + (2 + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE))*STEP;
dwDWORD:=NOT(SHL(1,BIT_NUMBER MOD STEP_SIZE));
pdwADR^ := pdwADR^ AND dwDWORD;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>47da4170-6101-4b34-8b8a-0472c4f34083</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="RESET_BIT8" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN_ADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="BIT_NUMBER">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="bBYTE">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STEP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR:=	IN_ADR+STEP;
SIZE	:=	pbADR^;	
IF BIT_NUMBER &gt;= (SIZE-2*STEP)*8 OR BIT_NUMBER &lt;0 THEN
	BIT_NUMBER	:=	0;
	BIT_NUMBER	:=	BIT_NUMBER/BIT_NUMBER;
	//Ты вышел за пределы структуры, дядь
END_IF
pbADR := IN_ADR + 2*STEP + ANY_TO_DWORD(BIT_NUMBER/STEP_SIZE);
bBYTE:=NOT(SHL(1,BIT_NUMBER MOD STEP_SIZE));
pbADR^ := pbADR^ AND bBYTE;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>95542d07-ce28-49a9-b098-c490d01cf7ce</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_OR8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			OR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			OR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			OR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			OR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8bf05f3e-bcd1-4d8e-8599-155fae7cd07b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_OR16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			OR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			OR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			OR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			OR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8391c363-4f52-4bd7-8b9f-caf49d09865a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_OR32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			OR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			OR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			OR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			OR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>13de23ae-6aa4-4e50-8655-f2c717cee370</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NEQ32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			NEQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			NEQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			NEQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			NEQ32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 = X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a26988a3-d507-48f9-b812-c4ca77df8a75</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_1_32" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pdwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pdwADR1	:=	IN_ADR1+COUNT;
	IF NOT(pdwADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FINDNTH_1_32 MOD STEP_SIZE)) OR pdwADR1^ )= 4294967295 THEN			
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF 	
			END_IF;
			FINDNTH_1_32:=FINDNTH_1_32 + 1;
		UNTIL FINDNTH_1_32 MOD STEP_SIZE = 0
		END_REPEAT;
	ELSE
		FINDNTH_1_32:=FINDNTH_1_32 + STEP_SIZE;
	END_IF
END_FOR
FINDNTH_1_32:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0e596ccb-3a3d-477d-90e4-38cadfde60e3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_0_16" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pwADR1	:=	IN_ADR1+COUNT;
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FINDNTH_0_16 MOD STEP_SIZE)) OR pwADR1^ )= 65535) THEN			
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF 		
			END_IF;
			FINDNTH_0_16:=FINDNTH_0_16 + 1;
		UNTIL FINDNTH_0_16 MOD STEP_SIZE = 0
		END_REPEAT;	
END_FOR
FINDNTH_0_16:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d517babd-6863-4eec-b156-2331ea6066a8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NXOR8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			NXOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			NXOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			NXOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			NXOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3bf819e3-837e-4f0f-aa74-3397640c2b4b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NXOR16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			NXOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			NXOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			NXOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			NXOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>61c8b960-e998-4c93-a7f9-4f21e56911e4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NXOR32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			NXOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			NXOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			NXOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			NXOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d0a790ac-f065-4b2d-9cdb-267125596c3d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOR8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			NOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			NOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			NOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			NOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f7a7075b-aab9-4519-9e7c-e0e2b226a75e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOR16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			NOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			NOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			NOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			NOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>20045a59-6b34-4937-b2c7-2a9955d975ce</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOR32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			NOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			NOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			NOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			NOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = NOT(X1 OR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8c4402f7-a851-44d5-8d5f-f464d784ef1c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_0_32" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pdwADR1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pdwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pdwADR1^;
FOR COUNT:=2*STEP TO SIZE-1 BY STEP DO
	pdwADR1	:=	IN_ADR1+COUNT;
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FINDNTH_0_32 MOD STEP_SIZE)) OR pdwADR1^ )= 4294967295) THEN		
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF 			
			END_IF;
			FINDNTH_0_32:=FINDNTH_0_32 + 1;
		UNTIL FINDNTH_0_32 MOD STEP_SIZE = 0
		END_REPEAT;	
END_FOR
FINDNTH_0_32:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f4994f30-ceb9-4861-ab71-939d0d6946c7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_XOR8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
CTRL3._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500mS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL2),N);
			XOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL2),N);
			SET_BIT8(ADR(CTRL1),N);
			XOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT8(ADR(CTRL2),N);
			XOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT8(ADR(CTRL1),N);
			RESET_BIT8(ADR(CTRL2),N);
			XOR8(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			X3 := GET_BIT8(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3acef4d4-d396-4b6b-997c-29ad90e0680f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_XOR16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
CTRL3._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL2),N);
			XOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL2),N);
			SET_BIT16(ADR(CTRL1),N);
			XOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT16(ADR(CTRL2),N);
			XOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT16(ADR(CTRL1),N);
			RESET_BIT16(ADR(CTRL2),N);
			XOR16(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			X3 := GET_BIT16(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2a3997c9-df86-419c-9bed-756788c16f6e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_XOR32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL3">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
CTRL3._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL3));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL2),N);
			XOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL2),N);
			SET_BIT32(ADR(CTRL1),N);
			XOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 2;
		2:
			SET_BIT32(ADR(CTRL2),N);
			XOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 3;
		3:
			RESET_BIT32(ADR(CTRL1),N);
			RESET_BIT32(ADR(CTRL2),N);
			XOR32(ADR(CTRL1),ADR(CTRL2),ADR(CTRL3));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			X3 := GET_BIT32(ADR(CTRL3),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X3 = (X1 XOR X2) THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e5e39e23-dd97-48f9-96d9-8541df5744c6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOT8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
CTRL2._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL2));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT8(ADR(CTRL1),N);
			NOT8(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			STAGE := 1;
		1:
			RESET_BIT8(ADR(CTRL1),N);
			NOT8(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT8(ADR(CTRL1),N);
			X2 := GET_BIT8(ADR(CTRL2),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 16 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X2 = NOT X1 THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cbcc6a76-5b92-4319-bfe1-fca89b115e79</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOT16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL1));
CTRL2._CTRL16.SIZE:=ANY_TO_WORD(SIZEOF(CTRL2));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT16(ADR(CTRL1),N);
			NOT16(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			STAGE := 1;
		1:
			RESET_BIT16(ADR(CTRL1),N);
			NOT16(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT16(ADR(CTRL1),N);
			X2 := GET_BIT16(ADR(CTRL2),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 32 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X2 = NOT X1 THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a087fda9-7680-471e-abb7-18612898a638</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_NOT32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="CTRL2">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="TIMER">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="STAGE">
              <type>
                <derived name="ENUM" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="X1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CORRECT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL1));
CTRL2._CTRL32.SIZE:=ANY_TO_DWORD(SIZEOF(CTRL2));
TIMER(IN:=TRUE, PT:=T#500MS);
IF	TIMER.Q THEN
	TIMER(IN:=FALSE);
	CASE STAGE OF
		0:
			SET_BIT32(ADR(CTRL1),N);
			NOT32(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			STAGE := 1;
		1:
			RESET_BIT32(ADR(CTRL1),N);
			NOT32(ADR(CTRL1),ADR(CTRL2));
			X1 := GET_BIT32(ADR(CTRL1),N);
			X2 := GET_BIT32(ADR(CTRL2),N);
			STAGE := 0;
			N:=N+1;
			IF	N = 64 THEN
				N := 0;
			END_IF
	END_CASE
END_IF
IF	X2 = NOT X1 THEN
	CORRECT	:=	TRUE;
ELSE
	CORRECT	:=	FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b52a50fa-8a8c-44f6-9776-30713e0f486a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_0_8" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR1	:=	IN_ADR1+1;
SIZE	:=	pbADR1^;
FOR COUNT:=2 TO SIZE-1 DO
	pbADR1	:=	IN_ADR1+COUNT;
		REPEAT
 			IF	NOT((NOT(SHL(ONE,FINDNTH_0_8 MOD 8)) OR pbADR1^ )= 255) THEN
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF
			END_IF;
			FINDNTH_0_8:=FINDNTH_0_8 + 1;
		UNTIL FINDNTH_0_8 MOD 8 = 0
		END_REPEAT;	
END_FOR
FINDNTH_0_8:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b89f156e-4dd3-4f87-94bb-2b3a6456a32f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_0_8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_0_8(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ea54f5c2-2383-4f52-a47e-c71cded6028d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_0_16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_0_16(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b2a18b08-9d4d-4805-b5c6-5b0b1cdff9d7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_0_32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_0_32(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2e1e63d0-411f-4d35-8684-c83b8bc3e99f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_1_8" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pbADR1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pbADR1	:=	IN_ADR1+STEP;
SIZE	:=	pbADR1^;
FOR COUNT:=2 TO SIZE-1 DO
	pbADR1	:=	IN_ADR1+COUNT;
	IF NOT(pbADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FINDNTH_1_8 MOD 8)) OR pbADR1^ )= 255 THEN			
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF 	
			END_IF;
			FINDNTH_1_8:=FINDNTH_1_8 + 1;
		UNTIL FINDNTH_1_8 MOD 8 = 0
		END_REPEAT;
	ELSE
		FINDNTH_1_8:=FINDNTH_1_8 + 8;
	END_IF
END_FOR
FINDNTH_1_8:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>54f20304-9442-4646-a520-9d64590bbfec</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_1_8" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL8" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL8.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_1_8(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>73571475-74d1-4509-971a-8f9177534d49</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FINDNTH_1_16" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="IN_ADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="SIZE">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="pwADR1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="N_COUNT">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="ONE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="STEP">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="STEP_SIZE">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="(STEP * 8)" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pwADR1	:=	IN_ADR1+STEP;
SIZE	:=	pwADR1^;
FOR COUNT:=2*STEP TO SIZE-STEP BY STEP DO
	pwADR1	:=	IN_ADR1+COUNT;
	IF NOT(pwADR1^ =0) THEN
		REPEAT
 			IF	(NOT(SHL(ONE,FINDNTH_1_16 MOD STEP_SIZE)) OR pwADR1^ )= 65535 THEN 			
				N_COUNT := N_COUNT + 1;
				IF	N_COUNT = N THEN
					RETURN;					
				END_IF 	
			END_IF;
			FINDNTH_1_16:=FINDNTH_1_16 + 1;
		UNTIL FINDNTH_1_16 MOD STEP_SIZE = 0
		END_REPEAT;
	ELSE
		FINDNTH_1_16:=FINDNTH_1_16 + STEP_SIZE;
	END_IF
END_FOR
FINDNTH_1_16:=-1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f1741ae-4c3a-4124-882f-7322686e1454</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_1_16" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL16" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL16.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_1_16(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b4b9ced1-c19d-4c75-9d42-48f498e5e57d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CHECK_FINDNTH_1_32" pouType="program">
        <interface>
          <localVars>
            <variable name="CTRL1">
              <type>
                <derived name="uCTRL32" />
              </type>
            </variable>
            <variable name="N">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="M">
              <type>
                <LINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CTRL1._CTRL32.SIZE:=ANY_TO_BYTE(SIZEOF(CTRL1));
M:=FINDNTH_1_32(ADR(CTRL1),N);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>93a9f602-42c2-4a8f-a86f-033da82c2a52</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
      <union name="uCTRL8">
        <variable name="_CTRL8">
          <type>
            <derived name="CTRL8" />
          </type>
        </variable>
        <variable name="_wCTRL8">
          <type>
            <derived name="bCTRL8" />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>30009998-27a3-48d9-8a30-186548dc1309</ObjectId>
          </data>
        </addData>
      </union>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
      <union name="uCTRL16">
        <variable name="_CTRL16">
          <type>
            <derived name="CTRL16" />
          </type>
        </variable>
        <variable name="_wCTRL16">
          <type>
            <derived name="wCTRL16" />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>46820c6e-5138-4388-b312-4f201f587283</ObjectId>
          </data>
        </addData>
      </union>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
      <union name="uCTRL32">
        <variable name="_CTRL32">
          <type>
            <derived name="CTRL32" />
          </type>
        </variable>
        <variable name="_dwCTRL32">
          <type>
            <derived name="dwCTRL32" />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>95cf566c-6f41-404a-9927-51dd205defe5</ObjectId>
          </data>
        </addData>
      </union>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="BIT_OPS">
          <Folder Name="AND">
            <Object Name="AND16" ObjectId="e5ff58f2-114a-4b9d-8ad3-44fc9fc0e74b" />
            <Object Name="AND32" ObjectId="5fe4f59f-3058-4056-ab1a-9b5ef3710b2a" />
            <Object Name="AND8" ObjectId="dd50a625-bf8a-477b-a109-63c10c5f4304" />
            <Object Name="CHECK_AND8" ObjectId="f401dffc-8e67-4046-b400-1c2b069eaa8f" />
            <Object Name="CHECK_AND16" ObjectId="6b24c292-8acf-4bf9-b76c-3484421de496" />
            <Object Name="CHECK_AND32" ObjectId="e5836a4b-52f9-47ae-95a4-c437fd573ae3" />
          </Folder>
          <Folder Name="NAND">
            <Object Name="NAND8" ObjectId="c7db9299-8fc0-473e-8d3b-c711c3ee3565" />
            <Object Name="NAND16" ObjectId="ebf65775-2b78-4aaa-9905-14597fc16a49" />
            <Object Name="NAND32" ObjectId="9110a7a9-27b9-4287-9e1f-9ffd017becd8" />
            <Object Name="CHECK_NAND8" ObjectId="34ce3863-d9c6-47fe-8fd5-2ace153c897e" />
            <Object Name="CHECK_NAND16" ObjectId="ce3feee8-df6d-45eb-b056-897a3f9f72b5" />
            <Object Name="CHECK_NAND32" ObjectId="c5148024-6994-428a-9f6a-5e3ccf402413" />
          </Folder>
          <Folder Name="OR">
            <Object Name="OR8" ObjectId="a82363b0-e2ab-4983-8bda-6ada30dec882" />
            <Object Name="OR16" ObjectId="33a06337-9fbf-4a0d-8334-800afecde22f" />
            <Object Name="OR32" ObjectId="82d60dcb-c066-44c5-8bc6-2a86818df7cb" />
            <Object Name="CHECK_OR8" ObjectId="8bf05f3e-bcd1-4d8e-8599-155fae7cd07b" />
            <Object Name="CHECK_OR16" ObjectId="8391c363-4f52-4bd7-8b9f-caf49d09865a" />
            <Object Name="CHECK_OR32" ObjectId="13de23ae-6aa4-4e50-8655-f2c717cee370" />
          </Folder>
          <Folder Name="NOR">
            <Object Name="NOR8" ObjectId="e79c4e0d-13cf-44cc-ab36-1fea6b94c605" />
            <Object Name="NOR16" ObjectId="6882190d-0faa-4726-8ac6-3a9f2aa627ca" />
            <Object Name="NOR32" ObjectId="72e12d04-39d0-421c-b13a-7ceeb05fa894" />
            <Object Name="CHECK_NOR8" ObjectId="f7a7075b-aab9-4519-9e7c-e0e2b226a75e" />
            <Object Name="CHECK_NOR16" ObjectId="20045a59-6b34-4937-b2c7-2a9955d975ce" />
            <Object Name="CHECK_NOR32" ObjectId="8c4402f7-a851-44d5-8d5f-f464d784ef1c" />
          </Folder>
          <Folder Name="XOR">
            <Object Name="XOR8" ObjectId="ecd11682-a16f-49ce-920c-6969ccad3bb8" />
            <Object Name="XOR16" ObjectId="9d10a4a2-ee74-40d0-b855-7254845e1ed6" />
            <Object Name="XOR32" ObjectId="bc087edf-8f59-4dda-823a-929933381aed" />
            <Object Name="CHECK_XOR8" ObjectId="3acef4d4-d396-4b6b-997c-29ad90e0680f" />
            <Object Name="CHECK_XOR16" ObjectId="2a3997c9-df86-419c-9bed-756788c16f6e" />
            <Object Name="CHECK_XOR32" ObjectId="e5e39e23-dd97-48f9-96d9-8541df5744c6" />
          </Folder>
          <Folder Name="NXOR">
            <Object Name="NXOR8" ObjectId="59b4b583-01fd-4056-a086-01abfd16291f" />
            <Object Name="NXOR16" ObjectId="7276e49d-9cb9-4a71-8b85-3c431419c789" />
            <Object Name="NXOR32" ObjectId="96dba2e6-3355-408d-9e80-f388a5ec8dfe" />
            <Object Name="CHECK_NXOR8" ObjectId="3bf819e3-837e-4f0f-aa74-3397640c2b4b" />
            <Object Name="CHECK_NXOR16" ObjectId="61c8b960-e998-4c93-a7f9-4f21e56911e4" />
            <Object Name="CHECK_NXOR32" ObjectId="d0a790ac-f065-4b2d-9cdb-267125596c3d" />
          </Folder>
          <Folder Name="NOT">
            <Object Name="NOT8" ObjectId="8b9b457c-cff6-43b3-80a4-9d186638271c" />
            <Object Name="NOT16" ObjectId="897fc01d-5ffc-42c1-857d-ae4fb9339738" />
            <Object Name="NOT32" ObjectId="5b1fb536-2b1c-4bcb-b0cb-3d1ba188fe29" />
            <Object Name="CHECK_NOT8" ObjectId="cbcc6a76-5b92-4319-bfe1-fca89b115e79" />
            <Object Name="CHECK_NOT16" ObjectId="a087fda9-7680-471e-abb7-18612898a638" />
            <Object Name="CHECK_NOT32" ObjectId="b52a50fa-8a8c-44f6-9776-30713e0f486a" />
          </Folder>
          <Folder Name="EQ">
            <Object Name="EQ8" ObjectId="8b07a58d-14fc-46be-9c4b-7f615864699e" />
            <Object Name="EQ16" ObjectId="c20d7602-9961-42e7-8494-65347c24ed7c" />
            <Object Name="EQ32" ObjectId="c4c831e5-6d75-494d-9ca2-781bc2e4757a" />
            <Object Name="CHECK_EQ8" ObjectId="ee566ffe-660b-4424-ae13-00ed24d9708b" />
            <Object Name="CHECK_EQ16" ObjectId="3690aca6-abf1-464c-8070-2ea04b98270d" />
            <Object Name="CHECK_EQ32" ObjectId="f2755be4-ce16-4eb8-b91a-6feabe9c4672" />
          </Folder>
          <Folder Name="NEQ">
            <Object Name="NEQ8" ObjectId="a0383e8a-b852-474a-8c82-dae4f33d5394" />
            <Object Name="NEQ16" ObjectId="b4dae573-3c39-4fe2-a6fc-740096bfa505" />
            <Object Name="NEQ32" ObjectId="faf9d016-e25e-4848-84d2-d1ca431743e4" />
            <Object Name="CHECK_NEQ8" ObjectId="a152e7b4-66b2-4a63-a6c0-9ff086f54e07" />
            <Object Name="CHECK_NEQ16" ObjectId="0e8c8027-7545-49e1-b96b-4c76fd2378a6" />
            <Object Name="CHECK_NEQ32" ObjectId="a26988a3-d507-48f9-b812-c4ca77df8a75" />
          </Folder>
        </Folder>
        <Folder Name="OTHER_OPS">
          <Folder Name="GET_BIT">
            <Object Name="GET_BIT8" ObjectId="12a98c65-0fef-48c5-848f-dbf33db3786d" />
            <Object Name="GET_BIT16" ObjectId="1720a264-5a3c-4328-a8ac-cba9618b7726" />
            <Object Name="GET_BIT32" ObjectId="bdbfe3f5-a51f-4ece-84f2-e449a4dde763" />
          </Folder>
          <Folder Name="SET_BIT">
            <Object Name="SET_BIT8" ObjectId="79b96be1-7907-4ce8-92ed-1fdabc7a6496" />
            <Object Name="SET_BIT16" ObjectId="b2989cc6-ef0b-448d-8bd2-7b191e3eb227" />
            <Object Name="SET_BIT32" ObjectId="7c7ce1ed-d748-469a-9646-dafdecca4288" />
            <Object Name="CHECK_SET_BIT16" ObjectId="f6b23ee9-f1ae-4b46-a291-07d9b1ccd421" />
            <Object Name="CHECK_SET_BIT8" ObjectId="351e6d1b-942a-4cc5-9371-3b84182130db" />
            <Object Name="CHECK_SET_BIT32" ObjectId="0cee82d8-eede-432a-9320-549260b4e60f" />
          </Folder>
          <Folder Name="FIND1ST_0">
            <Object Name="FIND1ST_0_8" ObjectId="4f435ba6-0053-4f06-9c61-26ab37efbd08" />
            <Object Name="FIND1ST_0_16" ObjectId="905d8604-fa1d-42cd-b70b-110d1fb940b1" />
            <Object Name="FIND1ST_0_32" ObjectId="25d985cc-96d9-4386-8e06-3d0f6b07871c" />
            <Object Name="CHECK_FIND1ST_0_8" ObjectId="3b92cad6-9fc0-4bf1-a448-285885be0e9f" />
            <Object Name="CHECK_FIND1ST_0_16" ObjectId="8610c05b-d7c5-4f09-8500-9bf5ca0e4e2b" />
            <Object Name="CHECK_FIND1ST_0_32" ObjectId="2bb7ea8e-7541-4a8f-9e35-0f65f10a29ca" />
          </Folder>
          <Folder Name="FIND1ST_1">
            <Object Name="FIND1ST_1_8" ObjectId="2a476147-ea42-4541-ba4e-db658599c051" />
            <Object Name="CHECK_FIND1ST_1_16" ObjectId="30da5cbd-4b79-414e-a6ab-ae66a564ca4e" />
            <Object Name="FIND1ST_1_16" ObjectId="06145564-411f-4109-9591-962141413603" />
            <Object Name="FIND1ST_1_32" ObjectId="3b629fe8-9f48-4f53-88da-5d89e02a1db4" />
            <Object Name="CHECK_FIND1ST_1_8" ObjectId="9193c303-1b5c-42f2-976e-5ae6435ac367" />
            <Object Name="CHECK_FIND1ST_1_32" ObjectId="9377f3a9-a220-4ef3-a0c1-e8677149fe68" />
          </Folder>
          <Folder Name="RESET_BIT">
            <Object Name="CHECK_RESET_BIT16" ObjectId="e687443f-a2d8-423c-be47-78a2a3ffd1fc" />
            <Object Name="CHECK_RESET_BIT32" ObjectId="e439e345-e737-4b9d-ab07-8e8a0b5524f7" />
            <Object Name="CHECK_RESET_BIT8" ObjectId="f951a0bf-9104-479d-85f7-cdc35f13c7b5" />
            <Object Name="RESET_BIT16" ObjectId="190863ec-5eaa-4124-8061-b4696887648b" />
            <Object Name="RESET_BIT32" ObjectId="47da4170-6101-4b34-8b8a-0472c4f34083" />
            <Object Name="RESET_BIT8" ObjectId="95542d07-ce28-49a9-b098-c490d01cf7ce" />
          </Folder>
          <Folder Name="FINDNTH_1">
            <Object Name="FINDNTH_1_32" ObjectId="0e596ccb-3a3d-477d-90e4-38cadfde60e3" />
            <Object Name="FINDNTH_1_8" ObjectId="54f20304-9442-4646-a520-9d64590bbfec" />
            <Object Name="CHECK_FINDNTH_1_8" ObjectId="73571475-74d1-4509-971a-8f9177534d49" />
            <Object Name="FINDNTH_1_16" ObjectId="0f1741ae-4c3a-4124-882f-7322686e1454" />
            <Object Name="CHECK_FINDNTH_1_16" ObjectId="b4b9ced1-c19d-4c75-9d42-48f498e5e57d" />
            <Object Name="CHECK_FINDNTH_1_32" ObjectId="93a9f602-42c2-4a8f-a86f-033da82c2a52" />
          </Folder>
          <Folder Name="FINDNTH_0">
            <Object Name="FINDNTH_0_16" ObjectId="d517babd-6863-4eec-b156-2331ea6066a8" />
            <Object Name="FINDNTH_0_32" ObjectId="f4994f30-ceb9-4861-ab71-939d0d6946c7" />
            <Object Name="FINDNTH_0_8" ObjectId="b89f156e-4dd3-4f87-94bb-2b3a6456a32f" />
            <Object Name="CHECK_FINDNTH_0_8" ObjectId="ea54f5c2-2383-4f52-a47e-c71cded6028d" />
            <Object Name="CHECK_FINDNTH_0_16" ObjectId="b2a18b08-9d4d-4805-b5c6-5b0b1cdff9d7" />
            <Object Name="CHECK_FINDNTH_0_32" ObjectId="2e1e63d0-411f-4d35-8684-c83b8bc3e99f" />
          </Folder>
        </Folder>
        <Folder Name="_STRUCT">
          <Folder Name="CTRL">
            <Folder Name="8">
              <Object Name="uCTRL8" ObjectId="30009998-27a3-48d9-8a30-186548dc1309" />
              <Object Name="CTRL8" ObjectId="8c434d67-51d7-4430-a21a-fae28cd4fefa" />
              <Object Name="bCTRL8" ObjectId="68e543be-5d4f-42b0-8b11-af273f9b3a06" />
            </Folder>
            <Folder Name="16">
              <Object Name="CTRL16" ObjectId="5b46cca3-42e7-4e49-b92a-f6d1b42dbcdc" />
              <Object Name="uCTRL16" ObjectId="46820c6e-5138-4388-b312-4f201f587283" />
              <Object Name="wCTRL16" ObjectId="63db2444-9037-4ca1-a5e0-2b99b7d89459" />
            </Folder>
            <Folder Name="32">
              <Object Name="CTRL32" ObjectId="1bf1f3f8-eb83-4be3-9554-ce5cb12053e1" />
              <Object Name="uCTRL32" ObjectId="95cf566c-6f41-404a-9927-51dd205defe5" />
              <Object Name="dwCTRL32" ObjectId="db6e5af7-cddf-437b-a0a6-0d0b50cd9f76" />
            </Folder>
          </Folder>
        </Folder>
      </ProjectStructure>
    </data>
  </addData>
</project>